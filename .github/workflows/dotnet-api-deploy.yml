name: Build and Deploy .NET API

on:
  push:
    branches:
      - feature/*
      - develop
      - qa
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: List files for debug
        run: ls -R ./LISCareLimited

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore
        working-directory: ./LISCareLimited

      - name: Build
        run: dotnet build --configuration Release
        working-directory: ./LISCareLimited

      - name: Test
        run: dotnet test --no-build --verbosity normal
        working-directory: ./LISCareLimited

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: >
            {
              "clientId": "${{ secrets.AZURE_CLIENT_ID }}",
              "clientSecret": "${{ secrets.AZURE_CLIENT_SECRET }}",
              "tenantId": "${{ secrets.AZURE_TENANT_ID }}",
              "subscriptionId": "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
            }

      - name: Set Azure App Name
        id: appname
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/develop" ]]; then
            echo "APP_NAME=${{ secrets.AZURE_WEBAPP_DEV_NAME }}" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF}" == "refs/heads/qa" ]]; then
            echo "APP_NAME=${{ secrets.AZURE_WEBAPP_QA_NAME }}" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            echo "APP_NAME=${{ secrets.AZURE_WEBAPP_PROD_NAME }}" >> $GITHUB_ENV
          else
            echo "APP_NAME=skip" >> $GITHUB_ENV
          fi

      - name: Publish
        if: env.APP_NAME != 'skip'
        run: dotnet publish -c Release -o ./publish
        working-directory: ./LISCareLimited

      - name: Deploy to Azure WebApp
        if: env.APP_NAME != 'skip'
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.APP_NAME }}
          package: ./LISCareLimited/publish
          slot-name: production
